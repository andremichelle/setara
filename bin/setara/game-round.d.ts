import { Rules } from "./card.js";
import { SoundManager } from "./sounds.js";
import { Random } from "../lib/math.js";
import { SVGCardFactory } from "./card-design.js";
export declare class GameRound {
    private readonly rules;
    private readonly cardFactory;
    private readonly soundManager;
    private readonly random;
    private readonly rootElement;
    private readonly cardsElement;
    private readonly rows;
    private readonly deck;
    private readonly map;
    private readonly selection;
    private turn;
    private started;
    private acceptUserInput;
    private hintIndex;
    private running;
    private gameOver;
    constructor(rules: Rules, cardFactory: SVGCardFactory, soundManager: SoundManager, random: Random);
    start(): Promise<void>;
    waitForTurnComplete(onSelectionComplete: (isSet: boolean) => void): Promise<boolean>;
    cancelTurn(): Promise<void>;
    available(): number;
    showHint(): void;
    terminate(): void;
    private processCardClick;
    private dealCards;
    private removeSet;
    private sortElement;
    private sortElements;
    private findElement;
    private hasSets;
    private dealtCards;
    private selectCard;
    private deselectCard;
    private deselectAll;
    private showInvalidAnimation;
    private watchResize;
    private installUserInput;
}
